service: spectrio-portal # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  #timeout: 30 # optional, in seconds, default is 6
  environment:
    DYNAMODB_CUSTOMERS_TABLE: purple-${opt:stage, self:provider.stage}-customers
    DYNAMODB_VENUES_TABLE: purple-${opt:stage, self:provider.stage}-venues
    DYNAMODB_VENUE_DAILY_TOTALS_TABLE: purple-${opt:stage, self:provider.stage}-venue-daily-totals
    DYNAMODB_CUSTOMER_DAILY_TOTALS_TABLE: purple-${opt:stage, self:provider.stage}-customer-daily-totals
    DYNAMODB_VISITS_TABLE: purple-${opt:stage, self:provider.stage}-visits
    DYNAMODB_VISITORS_TABLE: purple-${opt:stage, self:provider.stage}-visitors
    REGION: us-east-1
    STAGE: dev
  region: ${self:provider.environment.REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_CUSTOMERS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VENUES_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VENUES_TABLE}/index/${self:provider.environment.DYNAMODB_VENUES_TABLE}-customer-index"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}/index/${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}-customer-index"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}/index/${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}-customer-venue-index"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_CUSTOMER_DAILY_TOTALS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VISITS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VISITS_TABLE}/index/${self:provider.environment.DYNAMODB_VISITS_TABLE}-customer-index"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VISITORS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_VISITORS_TABLE}/index/${self:provider.environment.DYNAMODB_VISITORS_TABLE}-customer-index"

functions:
  purpleProxy:
    handler: /handlers/proxy.default
    name: ${self:service}-${opt:stage, self:provider.stage}-purpleProxy
    events:
      - http:
          path: purpleProxy
          method: get
          cors: true
  purpleStore:
    handler: /handlers/store.default
    name: ${self:service}-${opt:stage, self:provider.stage}-purpleStore
    events:
      - http:
          path: purpleStore
          method: get
          cors: true
  purpleAggregateCustomerVisitors:
    handler: /handlers/aggregate.calculateVenuesDailyTotals
    name: ${self:service}-${opt:stage, self:provider.stage}-purpleAggregateCustomerVisitors
    timeout: 45
    events:
      - http:
          path: purpleAggregateVenueVisitors
          method: get
          cors: true
  purpleFetchVenueDailyTotals:
    handler: /handlers/aggregate.fetchVenueDailyTotals
    name: ${self:service}-${opt:stage, self:provider.stage}-purpleFetchVenueDailyTotals
    timeout: 10
    events:
      - http:
          path: purpleFetchVenueDailyTotals
          method: get
          cors: true
  customer:
    handler: /handlers/customer.default
    name: ${self:service}-${opt:stage, self:provider.stage}-customer
    events:
      - http:
          path: customer/{id}
          method: get
          cors: true
      - http:
          path: customer/{id}
          method: post
          cors: true
      - http:
          path: customer/{id}
          method: put
          cors: true
      - http:
          path: customer/{id}
          method: delete
          cors: true

resources:
  Resources:
    CustomersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_CUSTOMERS_TABLE}
    VenuesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: customerId
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_VENUES_TABLE}-customer-index
            KeySchema:
              -
                AttributeName: customerId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1            
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_VENUES_TABLE}
    VenueDailyTotalsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: customerId
            AttributeType: S
          -
            AttributeName: customerVenueId
            AttributeType: S
          -
            AttributeName: date
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}-customer-index
            KeySchema:
              -
                AttributeName: customerId
                KeyType: HASH
              -
                AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1            
          - IndexName: ${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}-customer-venue-index
            KeySchema:
              -
                AttributeName: customerVenueId
                KeyType: HASH
              -
                AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1            
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_VENUE_DAILY_TOTALS_TABLE}
    CustomerDailyTotalsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_CUSTOMER_DAILY_TOTALS_TABLE}
    VisitsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: customerId
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_VISITS_TABLE}-customer-index
            KeySchema:
              -
                AttributeName: customerId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1            
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_VISITS_TABLE}
    VisitorsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: customerId
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_VISITORS_TABLE}-customer-index
            KeySchema:
              -
                AttributeName: customerId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1            
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_VISITORS_TABLE}        